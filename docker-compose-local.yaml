version: "3.8"

services:
  cas_db:
    container_name: "cas_db"
    image: postgres:15.3-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=postgres
      - POSTGRES_HOST=localhost
      - POSTGRES_PORT=5432
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 2s
      timeout: 2s
      retries: 10
    volumes:
      - ./cas_db_data:/var/lib/postgresql/data
      - ./cas_db_log:/var/log/postgresql
    ports:
      - "5432:5432"
    profiles: ["dev", "ci"]
    networks:
      - cas

  redis:
    container_name: "redis"
    image: redis:alpine
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 2s
      timeout: 2s
      retries: 10
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - ./redis_cache.conf:/usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"
    profiles: ["dev", "ci"]
    networks:
      - cas

  flower_dashboard:
    container_name: "flower_dashboard"
    image: mher/flower
    restart: always
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - FLOWER_BASIC_AUTH=user:password
    ports:
      - "5555:5555"
    profiles: ["flower", "observability"]
    networks:
      - cas

  prometheus:
    container_name: "prometheus"
    image: prom/prometheus
    restart: unless-stopped
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./cas_prom_data:/prometheus
    ports:
      - "9090:9090"
    profiles: ["observability"]
    networks:
      - cas

  grafana:
    container_name: "grafana"
    image: grafana/grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
      - GF_SERVER_HTTP_PORT=3000
    volumes:
      - ./cas_grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    profiles: ["observability"]
    networks:
      - cas

networks:
  cas:
    driver: bridge
