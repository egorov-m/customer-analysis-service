"""Initial Migration

Revision ID: f512c266f41f
Revises: 
Create Date: 2023-07-03 12:25:27.834344

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f512c266f41f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('customer',
    sa.Column('reputation', sa.Integer(), nullable=False),
    sa.Column('reg_date', sa.Date(), nullable=False),
    sa.Column('count_subscribers', sa.Integer(), nullable=False),
    sa.Column('is_all_comments_available', sa.Boolean(), nullable=False),
    sa.Column('is_all_reviews_available', sa.Boolean(), nullable=False),
    sa.Column('name_id', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=False),
    sa.Column('country_ru', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('country_en', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('city_ru', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('city_en', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('profession', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.PrimaryKeyConstraint('name_id')
    )
    op.create_table('product',
    sa.Column('is_all_customers_information_available_for_product', sa.Boolean(), nullable=False),
    sa.Column('name_id', sqlmodel.sql.sqltypes.AutoString(length=250), nullable=False),
    sa.Column('fullname', sqlmodel.sql.sqltypes.AutoString(length=250), nullable=False),
    sa.Column('image_url', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=5000), nullable=True),
    sa.PrimaryKeyConstraint('name_id')
    )
    op.create_table('comment',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('review_id', sa.Integer(), nullable=False),
    sa.Column('reg_datetime', sa.DateTime(), nullable=False),
    sa.Column('customer_name_id', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=False),
    sa.Column('text_comment', sqlmodel.sql.sqltypes.AutoString(length=10000), nullable=True),
    sa.ForeignKeyConstraint(['customer_name_id'], ['customer.name_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('customer_general_analysis',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('datetime_formation', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('count_all_comments', sa.Integer(), nullable=False),
    sa.Column('count_all_reviews', sa.Integer(), nullable=False),
    sa.Column('sentiment_all_comments_analysis_positive', sa.Float(), nullable=True),
    sa.Column('sentiment_all_comments_analysis_negative', sa.Float(), nullable=True),
    sa.Column('sentiment_all_comments_analysis_neutral', sa.Float(), nullable=True),
    sa.Column('sentiment_all_comments_analysis_skip', sa.Float(), nullable=True),
    sa.Column('sentiment_all_comments_analysis_speech', sa.Float(), nullable=True),
    sa.Column('sentiment_all_reviews_analysis_positive', sa.Float(), nullable=True),
    sa.Column('sentiment_all_reviews_analysis_negative', sa.Float(), nullable=True),
    sa.Column('sentiment_all_reviews_analysis_neutral', sa.Float(), nullable=True),
    sa.Column('sentiment_all_reviews_analysis_skip', sa.Float(), nullable=True),
    sa.Column('sentiment_all_reviews_analysis_speech', sa.Float(), nullable=True),
    sa.Column('similarity_analysis_all_comments', sa.Float(), nullable=True),
    sa.Column('similarity_analysis_all_reviews', sa.Float(), nullable=True),
    sa.Column('customer_name_id', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('version_mark', sqlmodel.sql.sqltypes.AutoString(length=5), nullable=False),
    sa.ForeignKeyConstraint(['customer_name_id'], ['customer.name_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('review',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('count_user_recommend_review', sa.Integer(), nullable=False),
    sa.Column('count_comments_review', sa.Integer(), nullable=False),
    sa.Column('date_review', sa.Date(), nullable=False),
    sa.Column('star_rating', sa.Float(), nullable=False),
    sa.Column('recommend_friends', sa.Boolean(), nullable=False),
    sa.Column('is_all_commenting_customers_available', sa.Boolean(), nullable=False),
    sa.Column('ru_category_1', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=False),
    sa.Column('ru_category_2', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=False),
    sa.Column('ru_category_3', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.Column('ru_category_4', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.Column('href_category_1', sqlmodel.sql.sqltypes.AutoString(length=250), nullable=False),
    sa.Column('href_category_2', sqlmodel.sql.sqltypes.AutoString(length=250), nullable=False),
    sa.Column('href_category_3', sqlmodel.sql.sqltypes.AutoString(length=250), nullable=True),
    sa.Column('href_category_4', sqlmodel.sql.sqltypes.AutoString(length=250), nullable=True),
    sa.Column('evaluated_product_name_id', sqlmodel.sql.sqltypes.AutoString(length=250), nullable=False),
    sa.Column('customer_name_id', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=False),
    sa.Column('advantages', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=True),
    sa.Column('disadvantages', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=True),
    sa.Column('text_review', sqlmodel.sql.sqltypes.AutoString(length=30000), nullable=True),
    sa.Column('general_impression', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=True),
    sa.ForeignKeyConstraint(['customer_name_id'], ['customer.name_id'], ),
    sa.ForeignKeyConstraint(['evaluated_product_name_id'], ['product.name_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('review')
    op.drop_table('customer_general_analysis')
    op.drop_table('comment')
    op.drop_table('product')
    op.drop_table('customer')
    # ### end Alembic commands ###
